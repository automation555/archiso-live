mount_tmpfs () 
{
    #if [ "x${ramdisk_size}" = "x" ]; then
        ramdisk_size="2M"
    #fi
    msg -n ":: Mounting tmpfs, size=${ramdisk_size}..."
    mount -t tmpfs -o "size=${ramdisk_size}" tmpfs /tmpfs
    msg "done."
}

device_mountdir()
{
   echo "/tmpfs/mnt/$(/usr/bin/basename "$1")" # | tr -s /
}

run_hook ()
{
    # external drives may need to settle
    msg ":: Waiting for usb devices to settle..."
    /sbin/udevadm trigger --subsystem-match=usb
    /sbin/udevadm settle
    sleep 5

    msg ":: Scanning for boot cdrom device..."
    
    /bin/mkdir -p /bootmnt
    /bin/mkdir -p /live
    #/bin/mkdir -p /bootchanges
    live="/live"
    #bootmnt="/bootmnt"
	#bootusbmnt="$(echo ${usb} | /bin/sed 's|/dev/|/mnt/|g')"
	#bootcdmnt="$(echo ${cdrom} | /bin/sed 's|/dev/|/mnt/|g')"
    #bootchanges="/bootchanges"
    found=0
    mount_tmpfs
    if [ "${break}" = "y" ]; then
        echo ":: Break requested, type 'exit' to resume operation"
        echo "   NOTE: klibc contains no 'ls' binary, use 'echo *' instead"
        PS1="ramfs$ " /bin/sh -i
    fi

#if [ "x${from}" != "x" ]; then
#	from=$(echo "${from}" | grep dev | sed 's|/dev/|/mnt/|g')
#fi

if [ "${bootusb}" = "y" ]; then 
    for usb in /dev/sd[a-z][0-9]; do
		bootusbmnt="$(device_mountdir ${usb})"
		/bin/mkdir -p ${bootusbmnt}
        if mount -t vfat "${usb}" ${bootusbmnt} >/dev/null 2>&1 ||\
            mount -t ext2 "${usb}" ${bootusbmnt} >/dev/null 2>&1; then
	if [ "x${from}" != "x" ]; then
			from=$(/usr/bin/basename ${from})			
				if [ -f "${bootusbmnt}/${from}/initrd.lzm" ]; then
					found=1
					msg "${usb}"
					/bin/mount -o bind "${bootusbmnt}/${from}" "${live}"
					break
				fi		
	else
	     if [ -f "${bootusbmnt}/initrd.lzm" ]; then
                found=1
                msg "${usb}"
                break
         fi
	fi
        else
            echo "Failed to mount ${usb}"
        fi
        [ ${found} -eq 0 ] && /bin/umount ${bootusbmnt} >/dev/null 2>&1
    done
else
    /bin/modprobe -q isofs >/dev/null 2>&1
    for cdrom in /dev/sr[0-9]; do
		bootcdmnt="$(device_mountdir ${cdrom})"
		mkdir -p "${bootcdmnt}"
        if mount -r -t iso9660 "${cdrom}" ${bootcdmnt} >/dev/null 2>&1; then
	    if [ -f "${bootcdmnt}/initrd.lzm" ]; then
                found=1
                msg "${cdrom}"
                break
            fi
        else
            echo "Failed to mount ${cdrom}"
        fi
        [ ${found} -eq 0 ] && /bin/umount ${bootcdmnt} >/dev/null 2>&1
    done
fi

    if [ ${found} -eq 0 ]; then
	
		if [ "${bootusb}" = "y" ]; then
			echo "ERROR: cannot find booted usb device, cannot continue..."
		else
        	echo "ERROR: cannot find booted cdrom device, cannot continue..."
		fi
		
        exit 1
    else
		if [ "${bootusb}" = "y" ]; then
			export BOOT_MOUNT="${bootusbmnt}"
		else
			export BOOT_MOUNT="${bootcdmnt}"
		fi
    fi

}

# vim:ft=sh:ts=4:sw=4:et:
