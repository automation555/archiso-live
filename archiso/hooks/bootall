run_hook ()
{
    # external drives may need to settle
    msg ":: Waiting for usb devices to settle..."
    /sbin/udevadm trigger --subsystem-match=usb
    /sbin/udevadm settle
    sleep 5

    msg ":: Scanning for boot cdrom device..."
    
    /bin/mkdir -p /bootmnt
    /bin/mkdir -p /live
    live="/live"
    bootmnt="/bootmnt"
    found=0
    
    if [ "${break}" = "y" ]; then
        echo ":: Break requested, type 'exit' to resume operation"
        echo "   NOTE: klibc contains no 'ls' binary, use 'echo *' instead"
        PS1="ramfs$ " /bin/sh -i
    fi
    
if [ "x${bootiso}" != "x" ]; then
	 for usb in /dev/sd[a-z][0-9]; do
        if mount -t vfat "${usb}" ${bootmnt} >/dev/null 2>&1 ||\
            mount -t ext2 "${usb}" ${bootmnt} >/dev/null 2>&1; then
            if [ -e "${bootmnt}/${bootiso}" ]; then
            	found=1
                msg "${usb}"
		break
	    fi
        else
            echo "Failed to mount ${usb}"
        fi
        [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
    done
elif [ "${bootusb}" = "y" ]; then 
    for usb in /dev/sd[a-z][0-9]; do
        if mount -t vfat "${usb}" ${bootmnt} >/dev/null 2>&1 ||\
            mount -t ext2 "${usb}" ${bootmnt} >/dev/null 2>&1; then
	if [ "x${from}" != "x" ]; then
            if [ -e "${bootmnt}/${from}/archlive.sqfs" ]; then
                found=1
                msg "${usb}"
		/bin/mount -o bind "${bootmnt}/${from}" "${live}"
                break
            fi
	else
	     if [ -e "${bootmnt}/archlive.sqfs" ]; then
                found=1
                msg "${usb}"
                break
            fi
	fi
        else
            echo "Failed to mount ${usb}"
        fi
        [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
    done
else
    /bin/modprobe -q isofs >/dev/null 2>&1
    for cdrom in /dev/sr[0-9]; do
        if mount -r -t iso9660 "${cdrom}" ${bootmnt} >/dev/null 2>&1; then
	    if [ -e "${bootmnt}/archlive.sqfs" ]; then
                found=1
                msg "${cdrom}"
                break
            fi
        else
            echo "Failed to mount ${cdrom}"
        fi
        [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
    done
fi
	

    if [ ${found} -eq 0 ]; then
	if [ "${bootusb}" = "y" ]; then
		echo "ERROR: cannot find booted usb device, cannot continue..."
	else
        echo "ERROR: cannot find booted cdrom device, cannot continue..."
	fi
        exit 1
    else
        export BOOT_MOUNT="${bootmnt}"
    fi

}

# vim:ft=sh:ts=4:sw=4:et:
