#!/usr/bin/env python

import pygtk
pygtk.require('2.0')
import gtk
import os
import string

class PowerDownWindow:

	def delete_event(self, widget, event, data=None):
		print "Quitting"
		gtk.main_quit()
		
	def logout(self, widget):
		print "Logging Out"
		os.system("openbox --exit")
	
	def restart(self, widget):
		print "Restarting"
		os.system("chvt 1 ; sudo /sbin/shutdown -r now")
	
	def shutdown(self, widget):
		print "Shutting down"
		os.system("chvt 1 ; sudo /sbin/shutdown -h now")
	
	def can_hibernate(self):
		returner = 0

		status = os.system("cat /boot/grub/menu.lst | grep resume")
		if status == 0:
			returner = 1
			
		return returner
	
	def error_popup(self, title, message):
		os.system("Xdialog --title '%s' --msgbox '%s' 10 41")
	
	def hibernate(self, widget):
		if can_hibernate():
			os.system("chvt 1 ; sudo /usr/sbin/pm-hibernate")
			print "Hibernating"
		else:
			error_popup("Hibernate Error", "Unable to go into hibernate mode.  Not correctly setup")
		
	def suspend(self, widget):
		if can_hibernate():
			os.system("chvt 1 ; sudo /usr/sbin/pm-suspend")
			print "Suspending"
		else:
			error_popup("Hibernate Error", "Unable to go into hibernate mode.  Not correctly setup")
		
	def btnbox(self, icon, label):
		btnbox = gtk.VBox(False, 5)
		label = gtk.Label(label)

		image = gtk.Image()
		icon_theme = gtk.icon_theme_get_default()
		pixbuf = icon_theme.load_icon(icon, 32, 0)
		image.set_from_pixbuf(pixbuf)
		btnbox.pack_start(image, False, False, 3)
		btnbox.pack_start(label, False, False, 3)
		image.show()
		label.show()
		return btnbox
	
	def __init__(self):
		self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
		
		self.window.set_title("What would you like to do?")

		self.window.connect("delete_event", self.delete_event)		
		self.window.set_border_width(15)
		self.window.move(300, 300)

		vbox = gtk.VBox(False, 5)
		self.window.add(vbox)
		
		hbox = gtk.HBox(True, 15)
		vbox.pack_start(hbox)
		
		button = gtk.Button()
		icon_box = self.btnbox("system-log-out", "Log Out")	
		button.add(icon_box)
		button.connect("clicked", self.logout)		
		hbox.pack_start(button, True, True, 0)
		icon_box.show()
		button.show()
		
		button = gtk.Button()
		icon_box = self.btnbox("system-reboot", "Restart")	
		button.add(icon_box)
		button.connect("clicked", self.restart)		
		hbox.pack_start(button, True, True, 0)
		icon_box.show()
		button.show()
		
		button = gtk.Button()
		icon_box = self.btnbox("system-shutdown", "Shut Down")		
		button.add(icon_box)
		button.connect("clicked", self.shutdown)		
		hbox.pack_start(button, True, True, 0)
		icon_box.show()
		button.show()

		
		sleepbox = gtk.HBox(True, 0)
		sleepbox.set_border_width(10)
		vbox.pack_start(sleepbox, False, False, 5)

		
		button = gtk.Button()
		icon_box = self.btnbox("system-suspend", "Standby")		
		button.add(icon_box)	
		sleepbox.pack_start(button, True, True, 20)
		icon_box.show()
		button.show()

		button = gtk.Button()
		icon_box = self.btnbox("system-hibernate", "Hibernate")		
		button.add(icon_box)
		sleepbox.pack_start(button, True, True, 20)
		icon_box.show()
		button.show()
		
		sep = gtk.HSeparator()
		vbox.pack_start(sep, False, False, 0)
		sep.show()
		
		closebox = gtk.HBox(False, 0)
		vbox.pack_start(closebox, False, False, 0)
		
		button = gtk.Button(stock=gtk.STOCK_CANCEL)
		button.connect("clicked", self.delete_event, self.window)
		closebox.pack_end(button, False, False, 0)
		button.show()

		sleepbox.show()		
		closebox.show()
		hbox.show()
		vbox.show()
		self.window.show()

	def main(self):
		gtk.main()

print __name__
if __name__ == "__main__":
	base = PowerDownWindow()
	base.main()
