run_hook ()
{
    # external drives may need to settle
    info "Waiting for usb devices to settle..."
    /sbin/udevadm trigger --subsystem-match=usb
    /sbin/udevadm settle
    sleep 5

    info -n "Scanning for boot cdrom device: "
    
    /bin/mkdir -p /bootmnt
    /bin/mkdir -p /live
    #/bin/mkdir -p /bootchanges
    live="/live"
    bootmnt="/bootmnt"
    #bootchanges="/bootchanges"
    found=0
    
    if [ "${break}" = "y" ]; then
        warn "Break requested, type 'exit' to resume operation"
        warn "NOTE: klibc contains no 'ls' binary, use 'echo *' instead"
        PS1="ramfs$ " /bin/sh -i
    fi

    if [ "${bootusb}" = "y" ]; then 
        for usb in /dev/sd[a-z][0-9]; do
            if mount -t vfat "${usb}" ${bootmnt} >/dev/null 2>&1 ||\
                mount -t ext2 "${usb}" ${bootmnt} >/dev/null 2>&1; then

                if [ "x${from}" != "x" ]; then
                    if [ -f "${bootmnt}/${from}/archlive.sqfs" ]; then
                        found=1
                        hl "${usb}"; echo
                        /bin/mount -o bind "${bootmnt}/${from}" "${live}"
                        break
                    fi
                else
                    if [ -f "${bootmnt}/archlive.sqfs" ]; then
                        found=1
                        hl "${usb}"; echo
                        break
                    fi
                fi
            else
                echo; error "Failed to mount ${usb}"
            fi
            [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
        done
    elif [ "${boothd}" = "y" ]; then 
        for hd in /dev/hd[a-z][0-9]; do
            if mount -t vfat "${hd}" ${bootmnt} >/dev/null 2>&1 ||\
                mount -t ext2 "${hd}" ${bootmnt} >/dev/null 2>&1; then
                if [ "x${from}" != "x" ]; then
                    if [ -f "${bootmnt}/${from}/archlive.sqfs" ]; then
                        found=1
                        hl "${hd}"; echo
                        /bin/mount -o bind "${bootmnt}/${from}" "${live}"
                        break
                    fi
                else
                    if [ -f "${bootmnt}/archlive.sqfs" ]; then
                        found=1
                        hl "${hd}"; echo
                        break
                    fi
                fi
            else
                echo; error "Failed to mount ${hd}"
            fi
            [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
        done
    else
        /bin/modprobe -q isofs >/dev/null 2>&1
        for cdrom in /dev/sr[0-9]; do
        #for cdrom in /dev/hd[c-z]; do
            if mount -r -t iso9660 "${cdrom}" ${bootmnt} >/dev/null 2>&1; then
                if [ -f "${bootmnt}/archlive.sqfs" ]; then
                    found=1
                    hl "${cdrom}"; echo
                    break
                fi
            else
                echo; error "Failed to mount ${cdrom}"
            fi
            [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
        done
    fi

    if [ ${found} -eq 0 ]; then
        if [ "${bootusb}" = "y" ]; then
            error "ERROR: cannot find booted usb device, cannot continue..."
        else
            error "ERROR: cannot find booted cdrom device, cannot continue..."
        fi
        exit 1
    else
        export BOOT_MOUNT="${bootmnt}"
    fi

}

# vim:ft=sh:ts=4:sw=4:et:
