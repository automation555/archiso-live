run_hook ()
{
    # external drives may need to settle
    msg ":: Waiting for usb devices to settle..."
    /sbin/udevtrigger --subsystem-match=usb
    /sbin/udevsettle
    sleep 5

    msg ":: Scanning for boot cdrom device..."
    
    /bin/mkdir -p /bootmnt
    bootmnt="/bootmnt"
    found=0

if [ "${bootusb}" = "y" ]; then 
    for usb in /dev/sd[a-z][0-9]; do
        if mount -r -t vfat "${usb}" ${bootmnt} >/dev/null 2>&1 ||\
            mount -r -t ext2 "${usb}" ${bootmnt} >/dev/null 2>&1; then
	if [ "x${from} = "x" ]; then
            if [ -e "${bootmnt}/archlive.sqfs" ]; then
                found=1
                msg "${usb}"
                break
            fi
	fi
	     if [ -e "${bootmnt}/${from}/archlive.sqfs" ]; then
                found=1
                msg "${usb}"
		/bin/mount -o bind "${bootmnt}/${from}" "${bootmnt}"
                break
            fi
        else
            echo "Failed to mount ${usb}"
        fi
        [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
    done
else
    /bin/modprobe -q isofs >/dev/null 2>&1
    for cdrom in /dev/cd/*; do
        if mount -r -t iso9660 "${cdrom}" ${bootmnt} >/dev/null 2>&1; then
	if [ "x${from} = "x" ]; then
            if [ -e "${bootmnt}/archlive.sqfs" ]; then
                found=1
                msg "${cdrom}"
                break
            fi
	fi
	    if [ -e "${bootmnt}/${from}/archlive.sqfs" ]; then
                found=1
                msg "${cdrom}"
		/bin/mount -o bind "${bootmnt}/${from}" "${bootmnt}"
                break
            fi
        else
            echo "Failed to mount ${cdrom}"
        fi
        [ ${found} -eq 0 ] && umount ${bootmnt} >/dev/null 2>&1
    done
fi

    if [ ${found} -eq 0 ]; then
	if [ "${bootusb} = "y" ]; then
	echo "ERROR: cannot find booted usb device, cannot continue..."
	else
        echo "ERROR: cannot find booted cdrom device, cannot continue..."
	fi
        exit 1
    else
        export BOOT_MOUNT="${bootmnt}"
    fi

}

# vim:ft=sh:ts=4:sw=4:et:
